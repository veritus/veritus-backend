version: '2.1'

services:
  db:
    image: postgres:9.6.3
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=kaninei3i3j94jginerign
    healthcheck:
      test: ["CMD-SHELL", "psql -h 'localhost' -U 'postgres' -c '\\l'"]
      interval: 30s
      timeout: 30s
      retries: 3
    
  backend:
    image: veritus/backend:latest
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=kaninei3i3j94jginerign
      - SECRET_KEY=nin3on3inri3nnwoge
      - DB_HOST=db
      - ALLOWED_HOSTS=["*"]
      - CORS_ORIGIN_WHITELIST=('localhost:3000',)
      - GATHER_CASES_CRON_TIME_SECONDS=1440
      - LINK_CASES_AND_PROMISES_CRON_TIME_SECONDS=1440
      - DJANGO_SETTINGS_MODULE=politech_backend.settings.development
      - VIRTUAL_HOST=codebee.me
      - VIRTUAL_PORT=8000
      - LETSENCRYPT_HOST=codebee.me
      - LETSENCRYPT_EMAIL=ragnarhardarson90@gmail.com
    volumes:
      - ./:/code
      - ./logs/backendLogs:/code/src/logs
      - ./logs/var:/var/log
    command: sh entrypoint.sh
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy

  nginx-proxy:
    image: jwilder/nginx-proxy
    environment:
     - DEFAULT_HOST=codebee.me
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/etc/nginx/vhost.d"
      - "/usr/share/nginx/html"
      - "/var/run/docker.sock:/tmp/docker.sock:ro"
      - "/etc/nginx/certs"

  letsencrypt-nginx-proxy-companion:
    image: jrcs/letsencrypt-nginx-proxy-companion
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    volumes_from:
      - "nginx-proxy"
